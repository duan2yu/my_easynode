#数据发送队列和实时数据缓存队列的Redis服务IP地址
#redis.host = 10.175.204.123:26379;10.252.145.127:26379;10.252.163.231:26379;
#redis.port = 6379
#redis.masterName = scard
#redis.password = zhpwd
redis.host = 121.40.221.221
redis.port = 7000
redis.password = scard_redis_test

#数据发送队列名称
redis.queueName = CBB100-DEVICE-DATA
#实时数据缓存前缀，真实的KEY为：$snapshot.prefix + $IMEI，SD(Snapshot Data)
snapshot.cache.prefix = SD-
#轨迹开始时间缓存(Track-Begin-Time)
track.cache.begin.prefix = TRACK-BT-
#轨迹最大时间跨度，单位：分钟，设置为0时表示无限时间跨度
track.max.duration = 0
#是否在GPS定位失败时，调用LBS接口查询GPS数据
lbs.switch = 1
#LBS接口URL
#lbs.service.URL = http://lbs.hzspeed.cn/lbs?plmn=$plmn&lac=$lac&cellId=$cellId
#绕过nginx，有问题。
lbs.service.URL = http://127.0.0.1:7000/lbs?plmn=$plmn&lac=$lac&cellId=$cellId
#发送告警通知的URL，本配置项注释或置空时将不发送告警通知
#service.alarmNote.URL = http://120.26.44.39:4001/alarm
service.alarmNote.URL = http://motor.adonging.com/alarm
service.alarmNote.timeout = 3000
service.alarmNote.response.succ.msg = 推送成功
#发送告警通知的Http Method
service.alarmNote.method = POST
#告警数据写入DB
alarm.write2DB = 1
#告警数据Collection名
alarm.data.collection = CBB100ALARM
#是否写统计数据
track.statistic = 1
#轨迹统计的Collection名
track.statistic.collection = CBB100TRACKSTAT
#是否冗余轨迹数据
track.data.redundant = 1


#mongodb connect url
mongodb.writeMode.safe = 1
mongodb.url = mongodb://car_dev:car_dev@120.26.53.55:27017/ZHLBS
#snapshot collection data
mongodb.collection = CBB100DATA
#track data collection
mongodb.track.collection = CBB100TRACK
#clear snapshot data：DataWriter会在终端数据上报时将终端数据记入mongodb的CBB100DATA collection，当轨迹数据形成时，会将轨迹数据写入CBB100TRACK
#此配置项用于标识是否要清除CBB100DATA的数据，建议不要清除
mongodb.snapshot.clear = 0

#CBB-100H ５分钟自动设防
device.CBB-100H.autoFence = 1